close all
clear all

%% setpath for rest of specific functions

%save this when doing DICE standard with their damage function
      load('/home/pbrown/Documents/MATLAB/DICE/test_Burke/Burke_damage_series_no_abate_cost.mat',...
           'overall_plot_series_no_abate_cost')
      
      global aopt
      aopt = overall_plot_series_no_abate_cost(14,:)';

%% run main program

range_values_2nd_half = linspace(1,1.5,6);
range_values_1st_half = 1./(range_values_2nd_half(2:end));

range_values = horzcat(fliplr(range_values_1st_half),range_values_2nd_half);

%accordian the variables

%damage function
dam_exp_coeff_vals = range_values*0.045;

%Elasticity of marginal utility 
%of consumption
elasmu_vals = range_values*1.45;         % 3
elasmu_vals(elasmu_vals <= 1) = 1.001;   

% carbon intensity of output
Sigg0_vals = range_values*-0.01;         % 4
Siggd_vals = range_values*-0.001;        % 5

%initial cost decline backstop 
%cost per period
pd_vals = range_values*0.025;            % 6

%abatement cost curve exponent
theta2_vals = range_values*2.8;          % 7

%asymptotic population
LA_vals = range_values*10500;            % 8

%total factor productivity
Ag0_vals = range_values*0.079;           % 9
Agd_vals = range_values*0.006;           % 10

%pure rate of time preference
prstp_vals = range_values*0.03;         % 11

%climate sensitivity
deltaT_vals = range_values*3.0;          % 12

num_vars = 12;

var_names = {'damage function exponent',...
             'damage function coefficent',...
             'elasticity of utility',...
             'C intensity, growth rate',...
             'C intensity, change in growth rate',...
             'backstop cost decline',...
             'abatement cost curve exponent',...
             'asymptotic population',...
             'TFP, growth rate',...
             'TFP, change in growth rate',...
             'pure rate of time preference',...
             'climate sensitivity'};

global dam_exp_coeff
global elasmu
global Sigg0
global Siggd
global pd
global theta2
global LA
global Ag0
global Agd
global prstp
global deltaT

middle_value_i = 6;

        %set everything to middle
        
                           dam_exp_coeff = dam_exp_coeff_vals(middle_value_i);
                           elasmu = elasmu_vals(middle_value_i);
                           Sigg0 = Sigg0_vals(middle_value_i);
                           Siggd = Siggd_vals(middle_value_i);
                           pd = pd_vals(middle_value_i);      
                           theta2 = theta2_vals(middle_value_i);
                           LA = LA_vals(middle_value_i);    
                           Ag0 = Ag0_vals(middle_value_i);
                           Agd = Agd_vals(middle_value_i);    
                           prstp = prstp_vals(middle_value_i);
                           deltaT = deltaT_vals(middle_value_i);
                           
                        %run DICE
                        addpath('/home/pbrown/Documents/MATLAB/DICE/test_Burke/DICE_sensitivity_no_opt/')
                        
                        DICE;

                        NPV_utility = fval;

                        %Calculate the Carbon Price
                        opt_price = pbacktime.*(aopt'./pai(1:length(aopt))).^(theta2-1); % Carbon price, $ per ton of CO2
                        
                        overall_plot_series = cat(1,S(16,:),...
                                            S(17,:),...
                                            S(7,:),...
                                            S(19,:),...
                                            S(9,:),...
                                            Sig,...
                                            L,...
                                            R,...
                                            S(20,:),...
                                            S(12,:),...
                                            S(4,:),...
                                            S(2,:),...
                                            S(14,:),...
                                            aopt',...
                                            opt_price,...
                                            S(10,:));
    % S
    % 1 - regular capital X
    % 2 - GMST X
    % 3 - lower ocean temperature X
    % 4 - atmospheric CO2 X
    % 5 - upper ocean CO2 X
    % 6 - lower ocean CO2 X
    % 7 - gross output X
    % 8 - zero-carbon emissions captial (leave NaN)
    % 9 - total capital (same as 1)
    % 10 - abatement cost
    % 11 - epsilon (leave NaN)
    % 12 - Industrial CO2 emissions
    % 13 - CO2 Radiative Forcing
    % 14 - Climate Damage
    % 15 - 
    % 16 - total utility
    % 17 - per capita utility
    % 18 - consumption
    % 19 - consumption per capita
    % 20 - net output
    
titles = {'total utility',...
          'per-capita utility',...
          'gross output',...
          'per-capita consumption',...
          'total capital',...
          'CO_2 intensity of output',...
          'population',...
          'discount factor',...
          'net output (Y_G)',...
          'industrial CO_2 emissions',...
          'ATM CO_2',...
          'global Temperature',...
          'damage from CC',...
          'control rate',...
          'carbon tax',...
          'abatement cost'};
      
ylabels = {'utils',...
          'utils / person',...
          '$ trillion 2005 USD',...
          '$ ___ 2005 USD / person',...
          '$ trillion 2005 USD',...
          'MTC/$1000',...
          'million people',...
          'unitless',...
          '$ trillion 2005 USD',...
          'Gt CO_2 / year',...
          'Gt CO_2',...
          '\Delta T above PI',...
          'fraction of output w.r.t. no warming',...
          'fraction of output w.r.t. no abatement',...
          '$1000 / Ton CO_2',...        
          'fraction'};                        
                        

%% save for plotting

%save this when doing DICE standard with their damage function
      overall_plot_series_no_opt = overall_plot_series;
      NPV_utility_no_opt = NPV_utility;
      save('/home/pbrown/Documents/MATLAB/DICE/test_Burke/Burke_damage_series_no_opt.mat',...
          'overall_plot_series_no_opt',...
          'NPV_utility_no_opt')
  