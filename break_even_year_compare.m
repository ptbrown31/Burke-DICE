close all
clear all

%% setpath for rest of specific functions

addpath('/home/pbrown/Documents/MATLAB/DICE/test_Burke/DICE_Burke_Damage_growth')

%% load

time_desc = 2010:5:2330;

%load DICE-default

abatement_cost_on = 1;
Burke_damage_on = 0;
optimize_on = 0;
optimize_for_total_utility = 1;
utility_function = 1;

code_string = ['_a',num2str(abatement_cost_on),...
                     '_B',num2str(Burke_damage_on),...
                     '_o',num2str(optimize_on),...
                     '_u',num2str(optimize_for_total_utility),...
                     '_uf',num2str(utility_function)];
                 
load(['/home/pbrown/Documents/MATLAB/DICE/test_Burke/scale_with_temperature_Burke_damage_aopt',code_string,'.mat'],...
          'opt_temp_i_1',...
          'aopt_time_series',...
          'overall_plot_series_all',...
          'R',...
          'titles',...
          'ylabels',...
          'code_string',...
          'end_year_plot',...
          'end_year_calc_1',...
          'end_year_calc_2',...
          'end_year_plot_ind',...
          'end_year_calc_ind_1',...
          'end_year_calc_ind_2',...
          'two_d_plot_trimmed_1',...
          'two_d_plot_trimmed_2',...
          'two_d_plot_trimmed_discounted_1',...
          'two_d_plot_trimmed_discounted_2',...
          'integrated_net_GDP_1',...
          'integrated_net_GDP_2')
      
      overall_plot_series_all_default_DICE = overall_plot_series_all;
      
      %load Burke damage
abatement_cost_on = 1;
Burke_damage_on = 1;
optimize_on = 0;
optimize_for_total_utility = 1;
utility_function = 1;

code_string = ['_a',num2str(abatement_cost_on),...
                     '_B',num2str(Burke_damage_on),...
                     '_o',num2str(optimize_on),...
                     '_u',num2str(optimize_for_total_utility),...
                     '_uf',num2str(utility_function)];
                 
load(['/home/pbrown/Documents/MATLAB/DICE/test_Burke/scale_with_temperature_Burke_damage_aopt',code_string,'.mat'],...
          'opt_temp_i_1',...
          'aopt_time_series',...
          'overall_plot_series_all',...
          'R',...
          'titles',...
          'ylabels',...
          'code_string',...
          'end_year_plot',...
          'end_year_calc_1',...
          'end_year_calc_2',...
          'end_year_plot_ind',...
          'end_year_calc_ind_1',...
          'end_year_calc_ind_2',...
          'two_d_plot_trimmed_1',...
          'two_d_plot_trimmed_2',...
          'two_d_plot_trimmed_discounted_1',...
          'two_d_plot_trimmed_discounted_2',...
          'integrated_net_GDP_1',...
          'integrated_net_GDP_2')
      
      overall_plot_series_all_Burke = overall_plot_series_all;
      
      T = 65;
      
%% anom w.r.t. no mitigation

per_capita_GWP_default_Dice = overall_plot_series_all_default_DICE(17,:,:);
per_capita_GWP_Burke = overall_plot_series_all_Burke(17,:,:);

%default DICE
for exp_i = 1:T
    
    per_capita_GWP_default_Dice(1,:,exp_i) = per_capita_GWP_default_Dice(1,:,exp_i) - per_capita_GWP_default_Dice(1,:,end);

end

%Burke
for exp_i = 1:T
    
   per_capita_GWP_Burke(1,:,exp_i) = per_capita_GWP_Burke(1,:,exp_i) - per_capita_GWP_Burke(1,:,end);

end
      
%% find the break even years

break_even_years_default_DICE = NaN(size(overall_plot_series_all_default_DICE,3),1); %one break even year for each level of mitigation
break_even_years_Burke = NaN(size(overall_plot_series_all_Burke,3),1); %one break even year for each level of mitigation

%default DICE
for exp_i = 1:T
    for yeari = 1:length(time_desc)
        
       if per_capita_GWP_default_Dice(1,yeari,exp_i) < 0 && per_capita_GWP_default_Dice(1,yeari+1,exp_i) >= 0;
           
           break_even_years_default_DICE(exp_i) = time_desc(yeari);
           
       end
    end
end

%Burke
for exp_i = 1:T
    for yeari = 1:length(time_desc)
        
       if per_capita_GWP_Burke(1,yeari,exp_i) < 0 && per_capita_GWP_Burke(1,yeari+1,exp_i) >= 0;
           
           break_even_years_Burke(exp_i) = time_desc(yeari);
           
       end
    end
end
     
%% plot histogram

break_even_years_bins = linspace(2030,2130,9);

    FigHandle = figure('Position', [100, 100, 1100, 600]); %[left bottom width height]
    set(gcf,'color',[1 1 1]);
    set(0, 'DefaultAxesFontSize',12);
    set(0,'defaultAxesFontName', 'helvetica')
    hold on

    histogram(break_even_years_default_DICE,break_even_years_bins,...
                'Normalization',...
                'probability',...
                'FaceColor',...
                'k',...
                'EdgeColor',...
                'none',...
                'EdgeAlpha',...
                0.5,...
                'FaceAlpha',...
                0.5);
    histogram(break_even_years_Burke,break_even_years_bins,...
                'Normalization',...
                'probability',...
                'FaceColor',...
                'r',...
                'EdgeColor',...
                'none',...
                'EdgeAlpha',...
                0.5,...
                'FaceAlpha',...
                0.5);

         xlabel('time (year)')
         ylabel('probability')
         title('break-even year distribution')

print(gcf,'/home/pbrown/Documents/MATLAB/DICE/test_Burke/break_even_year_histogram','-dpdf')
      